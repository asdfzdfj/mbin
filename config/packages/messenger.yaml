parameters:
    messenger_common_amqp_arguments:
        arguments:
            x-queue-version: 2
            x-queue-type: 'classic'
    messenger_common_retry_strategy:
        max_retries: 3
        delay: 10000
        multiplier: 1
        max_delay: 86400000

framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        failure_transport: dead

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            sync: "sync://"
            async:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        async: '%messenger_common_amqp_arguments%'
                    exchange:
                        name: async
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            inbox:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        inbox: '%messenger_common_amqp_arguments%'
                    exchange:
                        name: inbox
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            receive:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        receive: '%messenger_common_amqp_arguments%'
                    exchange:
                        name: receive
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            deliver:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        deliver: '%messenger_common_amqp_arguments%'
                    exchange:
                        name: deliver
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            outbox:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        outbox: '%messenger_common_amqp_arguments%'
                    exchange:
                        name: outbox
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            resolve:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        resolve: '%messenger_common_amqp_arguments%'
                    exchange:
                        name: resolve
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            old:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    queues:
                        messages: ~
                retry_strategy: '%messenger_common_retry_strategy%'
                serializer: messenger.transport.symfony_serializer
            failed:
                failure_transport: dead
                retry_strategy:
                    max_retries: 3
                    delay: 10000
                    multiplier: 1
                dsn: "doctrine://default?queue_name=failed"
                serializer: messenger.transport.symfony_serializer
            dead:
                dsn: "doctrine://default?queue_name=dead"
                serializer: messenger.transport.symfony_serializer


        routing:
            # Route your messages to the transports
            App\Message\Contracts\AsyncMessageInterface: async
            App\Message\Contracts\ActivityPubInboxInterface: inbox
            App\Message\Contracts\ActivityPubInboxReceiveInterface: receive
            App\Message\Contracts\ActivityPubOutboxDeliverInterface: deliver
            App\Message\Contracts\ActivityPubOutboxInterface: outbox
            App\Message\Contracts\ActivityPubResolveInterface: resolve
            # Consider adding SendEmail from Mailer via async messenger as well:
            #Symfony\Component\Mailer\Messenger\SendEmailMessage: async
            #App\Message\Contracts\SendConfirmationEmailInterface: async
# when@test:
#    framework:
#        messenger:
#            transports:
#                # replace with your transport name here (e.g., my_transport: 'in-memory://')
#                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'
